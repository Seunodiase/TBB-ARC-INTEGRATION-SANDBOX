{
  "name": "baltimore-banner-ledeai-wire-webhook",
  "version": "1.0.0",
  "description": "Wire WebHook for handling new Stories from LedeAI",
  "engines": {
    "node": ">=14"
  },
  "main": "src/functions/websked-webhook/handler.ts",
  "author": "",
  "license": "ISC",
  "scripts": {
    "build": "tsc",
    "clean": "rm -rf ./node_modules package-lock.json yarn.lock",
    "delete:stories": "bash ./scripts/delete_composer_stories.sh",
    "dev": "ts-node -r dotenv/config scripts/testHandler.js",
    "dev:rss": "nodemon ./scripts/rss/index.js",
    "help": "node -e \"console.log(require('.' + require('path').sep + 'package.json').scriptsComments || {})\"",
    "fetchSecrets": "node scripts/manageSSM.js fetch",
    "lint": "eslint --ext '.js,.jsx,.json,.ts,.tsx' .",
    "lint:fix": "eslint --fix --ext '.js,.jsx,.json,.ts,.tsx' .",
    "format": "prettier --config .prettierrc.json './**/*.{js,jsx,ts,tsx,json,css,scss,svg, md}' --write",
    "prepare": "cd ../../ && husky install middlewares/Lede_AI_Integration/.husky",
    "pre-commit": "run-p format lint lint:fix type:check build",
    "pre-push": "run-p test test:coverage",
    "publishSecrets": "node scripts/manageSSM.js publish",
    "sanity": "run-p format lint lint:fix type:check test test:coverage",
    "type:check": "tsc -p tsconfig.json",
    "test": "jest --passWithNoTests",
    "test:ci": "npm run lint && npm run lint:fix && npm run type:check && npm run test && npm run test:coverage && npm run build",
    "test:coverage": "jest --coverage --passWithNoTests",
    "test:watch": "jest --watchAll"
  },
  "scriptsComments": {
    "build": "Build the project.",
    "clean": "Delete the package-lock.json, yarn.lock files and the node_modules folder.",
    "delete:stories": "remove all stories given a list in bash",
    "dev": "Builds and runs lambda in the local environment.",
    "dev:rss": "Builds and runs rss local data",
    "fetchSecrets": "Retrieve the secrets from the AWS Parameter Store and store them in .secrets.yaml",
    "lint": "Validate various files to check if they have any syntax --passWithNoTests/errors.",
    "lint:fix": "Runs ESLint validations and apply auto fix solutions where available.",
    "format": "Run the Prettier code formatter on various file types.",
    "prepare": "Enable Git hooks using husky.",
    "pre-commit": "Runs linter, prettifier and type checker to ensure that only compliant code is sent.",
    "pre-push": "Runs the tests to ensure only tested code is pushed to the repo.",
    "publishSecrets": "Store new versions of secrets in the .secrets.yaml file in the AWS Parameter Store.",
    "sanity": "Quick command that developers can fastly run to check everything is working fine before commit/push.",
    "type:check": "Valdiates that all the types on TypeScript files (.ts, .tsx) are correctly implemented.",
    "test": "Run Jest unit tests in all related JS test files once (with cache).",
    "test:ci": "Review the format of the code and perform its tests before merging it to the necessary environments.",
    "test:coverage": "Run Jest unit tests with Coverage Reporters in all related test files once.",
    "test:watch": "Run Jest and continue running while changes are made"
  },
  "dependencies": {
    "dotenv": "^16.0.1",
    "hi-base32": "^0.5.1",
    "jsonwebtoken": "^8.5.1",
    "node-fetch": "^2.6.7",
    "rss-parser": "^3.12.0",
    "ts-node": "^10.9.1",
    "typescript": "^4.7.4",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@tsconfig/node16": "^1.0.3",
    "@types/aws-lambda": "^8.10.102",
    "@types/jest": "^28.1.7",
    "@types/jsonwebtoken": "^8.5.8",
    "@types/node": "^18.7.6",
    "@types/node-fetch": "^2.6.2",
    "@types/uuid": "^8.3.4",
    "@types/xml2js": "^0.4.11",
    "@typescript-eslint/eslint-plugin": "^5.33.1",
    "@typescript-eslint/parser": "^5.33.1",
    "aws-sdk": "^2.1197.0",
    "eslint": "^8.22.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^3.4.2",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jest": "^26.8.3",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "express": "^4.18.1",
    "fetch-mock": "^9.11.0",
    "fetch-mock-jest": "^1.5.1",
    "flat": "^5.0.2",
    "husky": "^8.0.1",
    "jest": "^28.1.3",
    "jest-config": "^28.1.3",
    "js-yaml": "^4.1.0",
    "lodash": "^4.17.21",
    "node-yaml-config": "^1.0.0",
    "nodemon": "^2.0.19",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.7.1",
    "ts-jest": "^28.0.8",
    "yargs": "^17.5.1"
  }
}
